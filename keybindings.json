// VS Code custom keybindings
//
// To be symlinked at ~/.config/Code/User/keybindings.json
//
// Many keybindings are similar to your Vim configuration, with an
// added Alt to get around the non-modality (i.e. we don't have normal mode
// and we need to press keybindings without affecting the input in insert mode).
//
// <leader> in the comments refers to #, like in your Vim config

[
// <leader>e to open the file explorer
{
    "key": "alt+[Backslash] alt+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
},
{
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
},
// Use Ctrl+' to toggle the terminal
{
    "key": "ctrl+'",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
},
{
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
},
// Go to next and previous file with ,n and ,b like in Vim
{
    "key": "alt+, alt+n",
    "command": "workbench.action.nextEditor"
},
{
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
},
{
    "key": "alt+, alt+b",
    "command": "workbench.action.previousEditor"
},
{
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
},
// Fuzzy search for file with <C-p>, like in Vim
{
    "key": "alt+[Backslash] alt+p",
    "command": "workbench.action.quickOpen"
},
{
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
},
// Indent and outdent (remove indent) with > and < respectively
{
    "key": "shift+alt+.",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "shift+alt+,",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
},
// Vim-fugitive-like keybindings for Git
// Open Git window with <leader>g
{
    "key": "alt+[Backslash] alt+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
},
{
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
},
// Stage with s
{
    "key": "alt+s",
    "command": "git.stage",
    "when": "workbench.scm.active"
},
// Unstage with u
{
    "key": "alt+u",
    "command": "git.unstage",
    "when": "workbench.scm.active"
},
// Unstage all with U
{
    "key": "shift+alt+u",
    "command": "git.unstageAll",
    "when": "workbench.scm.active"
},
// Go to commit message text box with cc. Requires the multi-command extension by ryuta46
// From https://stackoverflow.com/questions/63491911/how-to-use-keyboard-to-focus-on-git-commit-message-input-in-vscode
{
    "key": "alt+c alt+c",
    "command": "extension.multiCommand.execute",
    "args": {
        "sequence": [
            "list.focusFirst",
            "list.select",
        ]
    },
},
]
