# My i3 config file. To be located on ~/.config/i3/config

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal from the current directory. Requires installing the command xcwd from https://github.com/schischi/xcwd
bindsym $mod+Return exec "urxvt -cd `xcwd`"
# bindsym $mod+Return exec gnome-terminal --working-directory `xcwd`
#bindsym $mod+Return exec xfce4-terminal

# Change the direction in which windows are spawned
bindsym $mod+t split toggle 

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right


# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


# split in vertical orientation
bindsym $mod+v split vertical  # This doesn't work

# enter fullscreen mode for the focused container
# Copying tmux configuration, where we have z for zoom
bindsym $mod+z fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking   I have never used the stacked layout so I'll keep this keybinding for Anki notes (since s is next to a in the keyboard)
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent # for now, this keybinding is going to be Anki

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#bindsym $mod+r mode "resize" # I will use $mod+r for ranger

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}

# MY OWN COMMANDS
# Set natural scrolling
# In order to configure natural scrolling, you need to first install libinput, and second set the name of the touchpad (in quotes after the --set-prop option)
# to that of your computer's. For instance, in hyperion it is "SynPS/2 Synaptics Touchpad", and in corona it is "MSFT0001:0030BC Touchpad"
 exec_always --no-startup-id xinput --set-prop "MSFT0001:00 04F3:30BC Touchpad" "libinput Natural Scrolling Enabled" 1
# exec_always --no-startup-id xinput --set-prop "SynPS/2 Synaptics TouchPad" "libinput Natural Scrolling Enabled" 1
# bindsym $mod+Shift+minus split toggle; exec urxvt -hold -e "i3-msg split toggle"
# bindsym $mod+Shift+minus split toggle; i3-msg "exec -hold urxvt"; split toggle # None of these work
#bindsym $mod+r split toggle; exec i3-sensible-terminal -- bash -c "echo bar & read line"

# Disable middle click
# In Ubuntu, you have this really annoying behaviour by which a middle click will close a tab in web brosers such as Firefox. You can disable this with xinput. In particular, the number 1 of the Touchpad represents the left click, the number 2 represents the middle click, the number 3 represents the right click and the number 0 represents nothing. If I do
# xinput get-button-map 10         where 10 is the id of the touchpad, I obtain
# 1 2 3 4 5 6 7          therefore, I need to change this to 1 0 3 4 5 6 7 to disable the middle button
#                               and I need to change this to 1 1 3 4 5 6 7 to make the middle button part of the left button
exec_always --no-startup-id xinput set-button-map 10 1 0 3 4 5 6 7


# Resizing windows by 8 in i3 using keyboard only
bindsym $mod+Shift+y resize shrink width 8 px or 8 ppt 
bindsym $mod+Shift+u resize grow height 8 px or 8 ppt
bindsym $mod+Shift+i resize shrink height 8 px or 8 ppt
bindsym $mod+Shift+o resize grow width 8 px or 8 ppt

# Start a few applications
bindsym $mod+r  exec urxvt -e ranger 
# bindsym $mod+r exec gnome-terminal -e ranger
#bindsym $mod+r exec xfce4-terminal -e ranger
bindsym $mod+f exec firefox 
bindsym $mod+m exec rhythmbox
bindsym $mod+i exec urxvt -e htop
#bindsym $mod+i exec gnome-terminal -e htop
#bindsym $mod+i exec xfce4-terminal -e htop
# bindsym $mod+c exec urxvt -e env DG_CURRENT_DESKTOP=GNOME gnome-control-center # Settings, this doesn't work
bindsym $mod+Shift+w exec nm-connection-editor  # Wifi, but only to edit the wifi connections, not to connect
bindsym $mod+c exec google-chrome
bindsym $mod+a exec anki
# To create an anki note, use $mod+s, which is next to $mod+a (for anki). This opens the note template, which could be stored anywhere
bindsym $mod+s exec "urxvt -e vim -c LLPStartPreview /home/mgarort/repos/anki-decks/note_template.tex"
# bindsym $mod+s exec "gnome-terminal -e 'vim -c LLPStartPreview /home/mgarort/repos/anki-decks/note_template.tex'"
#bindsym $mod+s exec "xfce4-terminal -e 'vim -c LLPStartPreview /home/mgarort/repos/anki-decks/note_template.tex'"
bindsym $mod+n exec nautilus


# Pulse Audio controls
# The next 2 ones were always commented
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
# The next 2 ones worked in Hyperion
#bindsym XF86AudioRaiseVolume exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo +5% 
#bindsym XF86AudioLowerVolume exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo -5% 
# The next 2 ones were always commented
#bindsym $mod+F6 exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo +5% 
#bindsym $mod+F5 exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo -5% 
# The next 2 ones worked in Corona
bindsym $mod+F5 exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo -5% 
bindsym $mod+F6 exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo +5% 

# Brightness control
# These need the script brightness (in the mydotfiles repo) to be copied to /bin/brightness. Since /bin/brightness needs sudo access to work, you have to allow that command to be executed as sudo without entering a password. This can be done by modifying the /etc/sudoers file. To modify this file safely, use the command visudo in the following way:    
# sudo EDITOR=vim visudo
# Then, add the following line at the end:
# user host = (root) NOPASSWD: /bin/brightness  , for example
# mgarort hyperion = (root) NOPASSWD: /bin/brightness
bindsym $mod+F8 exec sudo /bin/brightness -10
bindsym $mod+F9 exec sudo /bin/brightness 10

# General system control
# The next command put the system in a state of deep sleep, too deep, so sound didn't work in headphones after awakening
# bindsym $mod+Shift+Control+s exec urxvt -e sudo sh -c "echo mem > /sys/power/state"
# The next command suspends the system in a gentle way, so sound works in headphones after awakening
bindsym $mod+Shift+Control+s exec systemctl suspend
bindsym $mod+Shift+Control+t exec systemctl poweroff
# Other system commands are also dealt with systemctl, following the example of the sleeping command
#bindsym $mod+Shift+Control+t exec urxvt -e sudo shutdown -h now
#bindsym $mod+Shift+Control+r exec urxvt -e sudo reboot
bindsym $mod+Shift+Control+r exec systemctl reboot
bindsym $mod+Shift+Control+l exec i3lock -c 000000
# This will start outputting visual output to the external monitor
bindsym $mod+Shift+x exec xrandr --auto


# Keyboard configuration
exec setxkbmap -layout us -variant intl
