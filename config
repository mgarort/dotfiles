# My i3 config file. To be located on ~/.config/i3/config

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# ---------------------------------
# SECTION:  General i3 configuration
# ---------------------------------
#
# Set modifier key to window key
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 11
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8
# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position TODO What is this??
floating_modifier $mod

# Reload i3 config (similar to Vim <leader>c, which is also related to i3 config
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3) TODO What is this?
bindsym $mod+Shift+r restart

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available). Also, disables buttons 1-5 (i.e. mouse) in the i3 bar,
# although it doesn't work perfectly
bar {
        status_command i3status
        bindsym button1 nop
        bindsym button2 nop
        bindsym button3 nop
        bindsym button4 nop
        bindsym button5 nop
        bindsym button6 nop
        bindsym button7 nop
}


# ---------------------------------
# SECTION:  Window and workspace navigation
# ---------------------------------
#
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# move focused workspace between monitors
bindsym $mod+Control+h move workspace to output left
bindsym $mod+Control+j move workspace to output up
bindsym $mod+Control+k move workspace to output down
bindsym $mod+Control+l move workspace to output right

# Resizing windows by 8 in i3 using keyboard only
bindsym $mod+Shift+y resize shrink width 8 px or 8 ppt
bindsym $mod+Shift+u resize grow height 8 px or 8 ppt
bindsym $mod+Shift+i resize shrink height 8 px or 8 ppt
bindsym $mod+Shift+o resize grow width 8 px or 8 ppt


# Change the direction in which windows are spawned
bindsym $mod+t split toggle

# kill focused window
bindsym $mod+Shift+q kill

# enter fullscreen mode for the focused container
# (consistent with my tmux and my Vim config)
bindsym $mod+z fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking   I have never used the stacked layout so I'll keep this keybinding for Anki notes (since s is next to a in the keyboard)
bindsym $mod+w layout tabbed
bindsym $mod+e layout splith

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# switch to workspace
bindsym $mod+grave workspace 0
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
bindsym $mod+minus workspace 11
bindsym $mod+equal workspace 12

# My usual normal usage for workspaces:
# 0 (grave `): for remote sessions through ssh
# 1: for local sessions in my laptop
# 2: for Vimwiki
# 3: for Firefox
# 4 and 5: for Nautilus and other graphical programs
# 6: for Anki main window
# 7: for Anki note visualizations
# 8: for Chrome and Gmail
# 9: for Teams
# 10: for firefox and youtube
# 11 (minus -) and 12 (equal =): for monitoring jobs in a remote session (watching
#                                jobs running in the queue, viewing log, etc)

# move focused container to workspace
bindsym $mod+Shift+grave move container to workspace 0
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
bindsym $mod+Shift+minus move container to workspace 11
bindsym $mod+Shift+equal move container to workspace 12


# ---------------------------------
# SECTION:  Exiting, locking and suspending
# ---------------------------------
#
# Suspend
bindsym $mod+Shift+Control+s exec systemctl suspend
# Turn off
bindsym $mod+Shift+Control+t exec systemctl poweroff
# Reboot/restart
bindsym $mod+Shift+Control+r exec systemctl reboot
# Password (lock and ask for password)
bindsym $mod+Shift+Control+p exec i3lock -c 000000
# Log out
bindsym $mod+Shift+Control+l exec "i3-msg exit"


# ---------------------------------
# SECTION:  System configuration
# ---------------------------------
#
# Set natural scrolling
# In order to configure natural scrolling, you need to first install libinput, and second set the name of the touchpad (in quotes after the --set-prop option)
# to that of your computer's. For instance, in hyperion it is "SynPS/2 Synaptics Touchpad", and in corona it is "MSFT0001:0030BC Touchpad"
 exec_always --no-startup-id xinput --set-prop "MSFT0001:00 04F3:30BC Touchpad" "libinput Natural Scrolling Enabled" 1

# Disable middle click
# In Ubuntu, you have this really annoying behaviour by which a middle click will close a tab in web brosers such as Firefox. You can disable this with xinput. In particular, the number 1 of the Touchpad represents the left click, the number 2 represents the middle click, the number 3 represents the right click and the number 0 represents nothing. If I do
# xinput get-button-map 10         where 10 is the id of the touchpad, I obtain
# 1 2 3 4 5 6 7          therefore, I need to change this to 1 0 3 4 5 6 7 to disable the middle button
#                               and I need to change this to 1 1 3 4 5 6 7 to make the middle button part of the left button

# Get the id of the touchpad (apparently it's not always 10; sometimes it's 11)
set $touchpad_id $( xinput | grep Touchpad | awk '{split($6,array,"="); print array[2]}' )
exec_always --no-startup-id xinput set-button-map $touchpad_id 1 0 3 4 5 6 7

# NOTE The following keybindings use function keys (i.e. F1-F12). Function keys are 
#      disabled by default in many laptop makes, leaving instead media keys such
#      as play, pause, etc as default. For your function keybindings to work, you'll
#      have to make function keys the default.
#      In Dell, you can toggle between function keys and media keys with Fn+Esc.

# Pulse Audio controls
# The next 2 ones were always commented
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
# The next 2 ones worked in Hyperion
#bindsym XF86AudioRaiseVolume exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo +5%
#bindsym XF86AudioLowerVolume exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo -5%
# The next 2 ones were always commented
#bindsym $mod+F6 exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo +5%
#bindsym $mod+F5 exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo -5%
# The next 2 ones worked in Corona
# bindsym $mod+F1 exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo -5%
# bindsym $mod+F2 exec --no-startup-id  pactl set-sink-volume  alsa_output.pci-0000_00_1f.3.analog-stereo +5%
# The next 2 worked in Chaucer
bindsym $mod+F1 exec amixer set Master 5%-
bindsym $mod+F2 exec amixer set Master 5%+

# Brightness control
# These need the script brightness (in the mydotfiles repo) to be copied to /bin/brightness. Since /bin/brightness needs sudo access to work, you have to allow that command to be executed as sudo without entering a password. This can be done by modifying the /etc/sudoers file. To modify this file safely, use the command visudo in the following way:
# sudo EDITOR=vim visudo
# Then, add the following line at the end:
# user host = (root) NOPASSWD: /bin/brightness  , for example
# mgarort hyperion = (root) NOPASSWD: /bin/brightness
bindsym $mod+F3 exec sudo /bin/brightness -3
bindsym $mod+F4 exec sudo /bin/brightness 3
# bindsym $mod+F3 exec xrandr --output eDP-1 --brightness 0.3
# bindsym $mod+F4 exec xrandr --output eDP-1 --brightness 0.75

# This will start sending the image to every output (external monitor, laptop screen...)
bindsym $mod+F5 exec xrandr --auto
# This will stop sending the image to the laptop screen
bindsym $mod+F6 exec xrandr --output eDP-1 --off
# This will invert the external screen (flip it upside down)
bindsym $mod+F7 exec xrandr --output DP-1 --rotate inverted; exec xrandr --output DP-2 --rotate inverted
# This will return the external screen to normal orientation (reverse the flip upside down)
bindsym $mod+F8 exec xrandr --output DP-1 --rotate normal; exec xrandr --output DP-2 --rotate normal

# Mode "x" for xrandr screen settings
bindsym $mod+x mode "xrandr"
mode "xrandr"{
    bindsym $mod+a exec xrandr --auto; mode "default"
    bindsym $mod+2 exec xrandr --auto; exec xrandr --output DP-2-2 --auto --right-of DP-2-1; exec xrandr --output eDP-1 --off; mode "default"
    bindsym $mod+l exec xrandr --output eDP-1 --auto --above DP-2-1; exec xrandr --output DP-2-1 --off; exec xrandr --output DP-2-2 --off; mode "default"
    bindsym $mod+x mode "default"
}

# Set default monitors for workspaces
workspace 0 output eDP-1 DP-2-1
workspace 1 output eDP-1 DP-2-1
workspace 2 output eDP-1 DP-2-1
workspace 3 output eDP-1 DP-2-2
workspace 4 output eDP-1 DP-2-2
workspace 5 output eDP-1 DP-2-2
workspace 6 output eDP-1 DP-2-2
workspace 7 output eDP-1 DP-2-2
workspace 8 output eDP-1 DP-2-2
workspace 9 output eDP-1 DP-2-2
workspace 10 output eDP-1 DP-2-2
workspace 11 output eDP-1 DP-2-2
workspace 12 output eDP-1 DP-2-2



# Keyboard configuration
# Unfortunately simply executing setxkbmap with
#       exec_always "setxkbmap -model pc105 -layout miguel_custom -variant miguel_custom"
# doesn't work, so instead we open a new terminal and execute the command there
exec --no-startup-id urxvt -e setxkbmap -layout miguel_custom -variant miguel_custom

# Battery pop-up notification
# Script i3-battery-popup downloaded from https://github.com/rjekker/i3-battery-popup
# and saved in my dotfiles repository. Must symlink it to /bin/battery-popup
exec --no-startup-id /bin/i3-battery-popup -n -D -L 45 -l 10




# ---------------------------------
# SECTION:  Launching applications
# ---------------------------------
#

# Launch terminal from the curent directory
bindsym $mod+Return exec "urxvt -cd `xcwd`"
# Launch nautilus from the current directory
bindsym $mod+n exec "nautilus `xcwd`"
# TODO Consider changing for an application that doesn't require compiling, like https://gist.github.com/viking/5851049y. Requires installing the command xcwd from https://github.com/schischi/xcwd

# start dmenu (a program launcher)
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
bindsym $mod+d exec dmenu_run

# ranger
bindsym $mod+r exec urxvt -e ranger
# firefox
bindsym $mod+f exec firefox
# screenshot
bindsym Print exec flameshot gui
# google-chrome
bindsym $mod+c exec google-chrome
# rhythmbox
bindsym $mod+m exec rhythmbox
# Brackets for monitoring: htop and sensors
bindsym $mod+bracketleft exec urxvt -e htop
bindsym $mod+bracketright exec urxvt -e watch -n2 sensors
# python
bindsym $mod+p exec urxvt -e python3
# anki
bindsym $mod+a exec anki
# Open Vim as a scratchpad
# bindsym $mod+b exec urxvt -e bash -ci "vim -c 'call LaunchScratchpad()'"
# Open Vim at the index of your zettelkasten
bindsym $mod+i workspace 2; exec urxvt -e bash -ci "vim -c 'call LaunchVimwiki()'"
# Open Vim session at the home directory
bindsym $mod+v exec urxvt -e bash -ci "vim -c 'cd $HOME'"
# Start ssh. Use a mode "ssh" so that you can bind to multiple remote
# machines, all of them through $mod+s
bindsym $mod+s mode "ssh"
mode "ssh"{
    # g for gpu
    bindsym $mod+g exec urxvt -e bash -ci "ssh hpc_cam_gpu"; mode "default"
    # c for cpu
    bindsym $mod+c exec urxvt -e bash -ci "ssh hpc_cam_cpu"; mode "default"
    # w for watch
    bindsym $mod+minus exec urxvt -e bash -ci 'ssh -t hpc_cam_cpu "watch_squeue"'; mode "default"
    # m for mount TODO Check improved version that was recommended to you on Reddit
    bindsym $mod+m exec bash -ci 'sshfs mg770@login-cpu.hpc.cam.ac.uk:/home/mg770 /home/mgarort/clustermtp'; exec urxvt -e bash -ci 'nautilus /home/mgarort/clustermtp/'; mode "default"
    # u for unmount
    bindsym $mod+u exec bash -ci 'fusermount -u /home/mgarort/clustermtp'; mode "default"
    bindsym $mod+s mode "default"
}
# Mode "o" for office related things
bindsym $mod+o mode "office"
mode "office"{
    bindsym $mod+w exec libreoffice --writer; mode "default"
    bindsym $mod+t exec teams; mode "default"
    bindsym $mod+d exec dropbox start; mode "default"
    bindsym $mod+s exec slack; mode "default"
    # Create keybindings for:
    # - Office
    # - Dropbox
    # - etc...
    bindsym $mod+o mode "default"
}


# ---------------------------------
# SECTION:  Config that ships with i3 and you should check if it is useful
# ---------------------------------
#
# focus the parent container
# bindsym $mod+a focus parent # for now, this keybinding is going to be Anki

# focus the child container
#bindsym $mod+d focus child

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#bindsym $mod+r mode "resize" # I will use $mod+r for ranger


# Disable mouse warping, i.e. setting the mouse position to the center
# of the focused window when focusing a window in a different screen
# or monitor
mouse_warping none




